--- a/src/App.js
+++ b/src/App.js
@@ -19,6 +19,8 @@
   const [pendingSubmissions, setPendingSubmissions] = useState([]);
   const [marketplace, setMarketplace] = useState([]);
   const [userVotes, setUserVotes] = useState({});
+  const [lightboxOpen, setLightboxOpen] = useState(false);
+  const [previewImage, setPreviewImage] = useState(null);
   
   const [searchTerm, setSearchTerm] = useState('');
   const [selectedMaster, setSelectedMaster] = useState(null);
@@ -40,6 +42,32 @@
     variantBarcode: '',
     imageFiles: []
   });
+
+  // Controlled vocabularies for constrained fields
+  const REGION_OPTIONS = [
+    'US (NTSC)', 'Japan (NTSC-J)', 'Europe (PAL)', 'Australia/NZ (PAL)', 'SECAM', 'Other'
+  ];
+  const PACKAGING_OPTIONS = [
+    'Slipcover', 'Clamshell', 'Big Box', 'Library Case', 'Other'
+  ];
+
+  // Submission validator for constrained inputs
+  const validateSubmission = () => {
+    if (!REGION_OPTIONS.includes(newSubmission.variantRegion)) {
+      alert('Please choose a valid Region from the dropdown.');
+      return false;
+    }
+    if (!PACKAGING_OPTIONS.includes(newSubmission.variantPackaging)) {
+      alert('Please choose a valid Packaging from the dropdown.');
+      return false;
+    }
+    if (newSubmission.variantRelease && !/^\d{4}$/.test(String(newSubmission.variantRelease))) {
+      alert('Release Year must be a 4-digit number (e.g., 1999).');
+      return false;
+    }
+    return true;
+  };
+
 
   useEffect(() => {
     supabase.auth.getSession().then(({ data: { session } }) => {
@@ -327,12 +355,22 @@
         .from('variants')
         .update({ approved: true })
         .eq('id', variantId);
-      
       if (error) throw error;
-      
+
+      // Optimistically remove from local pending list
+      setPendingSubmissions(prev => prev.filter(p => p.id !== variantId));
       alert('Submission approved!');
-      await loadPendingSubmissions();
+
+      // Refresh masters and the currently selected master so the variant appears immediately
       await loadMasterReleases();
+      if (selectedMaster) {
+        const { data, error: mErr } = await supabase
+          .from('master_releases')
+          .select('*, variants(*, variant_images(*))')
+          .eq('id', selectedMaster.id)
+          .single();
+        if (!mErr && data) setSelectedMaster(data);
+      }
     } catch (error) {
       alert('Error approving submission: ' + error.message);
     }
@@ -424,6 +462,7 @@
   };
 
   const handleSubmitEntry = async () => {
+    if (!validateSubmission()) return;
     try {
       if (submitType === 'master') {
         const { data: master, error: masterError } = await supabase
@@ -447,7 +486,7 @@
             master_id: master.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
@@ -467,7 +506,7 @@
             master_id: selectedMaster.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
@@ -770,6 +809,8 @@
   const [pendingSubmissions, setPendingSubmissions] = useState([]);
   const [marketplace, setMarketplace] = useState([]);
   const [userVotes, setUserVotes] = useState({});
+  const [lightboxOpen, setLightboxOpen] = useState(false);
+  const [previewImage, setPreviewImage] = useState(null);
   
   const [searchTerm, setSearchTerm] = useState('');
   const [selectedMaster, setSelectedMaster] = useState(null);
@@ -1078,12 +1119,22 @@
         .from('variants')
         .update({ approved: true })
         .eq('id', variantId);
-      
       if (error) throw error;
-      
+
+      // Optimistically remove from local pending list
+      setPendingSubmissions(prev => prev.filter(p => p.id !== variantId));
       alert('Submission approved!');
-      await loadPendingSubmissions();
+
+      // Refresh masters and the currently selected master so the variant appears immediately
       await loadMasterReleases();
+      if (selectedMaster) {
+        const { data, error: mErr } = await supabase
+          .from('master_releases')
+          .select('*, variants(*, variant_images(*))')
+          .eq('id', selectedMaster.id)
+          .single();
+        if (!mErr && data) setSelectedMaster(data);
+      }
     } catch (error) {
       alert('Error approving submission: ' + error.message);
     }
@@ -1175,6 +1226,7 @@
   };
 
   const handleSubmitEntry = async () => {
+    if (!validateSubmission()) return;
     try {
       if (submitType === 'master') {
         const { data: master, error: masterError } = await supabase
@@ -1198,7 +1250,7 @@
             master_id: master.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
@@ -1218,7 +1270,7 @@
             master_id: selectedMaster.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
@@ -1537,7 +1589,7 @@
                                       src={img.image_url}
                                       alt={`Variant ${idx + 1}`}
                                       className="w-16 h-16 object-cover rounded border-2 border-gray-300 cursor-pointer hover:border-purple-500 transition"
-                                      onClick={() => window.open(img.image_url, '_blank')}
+                                      onClick={() => { setPreviewImage(img.image_url); setLightboxOpen(true); }}
                                     />
                                   ))}
                                   {variant.variant_images.length > 4 && (
@@ -1841,7 +1893,7 @@
                                 src={img.image_url}
                                 alt={`Submission image ${idx + 1}`}
                                 className="w-full h-24 object-cover rounded border-2 border-gray-300 cursor-pointer hover:border-purple-500 transition"
-                                onClick={() => window.open(img.image_url, '_blank')}
+                                onClick={() => { setPreviewImage(img.image_url); setLightboxOpen(true); }}
                               />
                             ))}
                           </div>
@@ -1874,6 +1926,31 @@
                 </h2>
                 <button
                   onClick={() => setShowSubmitModal(false)}
+
+      {/* Lightbox for image previews */}
+      {lightboxOpen && previewImage && (
+        <div
+          className="fixed inset-0 z-50 bg-black/80 flex items-center justify-center p-4"
+          onClick={() => setLightboxOpen(false)}
+        >
+          <img
+            src={previewImage}
+            alt="Preview"
+            className="max-h-[90vh] max-w-[90vw] rounded-lg shadow-2xl"
+            onClick={(e) => e.stopPropagation()}
+          />
+          <button
+            aria-label="Close preview"
+            className="absolute top-4 right-4 bg-white/10 hover:bg-white/20 text-white rounded-full p-2"
+            onClick={() => setLightboxOpen(false)}
+          >
+            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" className="w-6 h-6" fill="none" stroke="currentColor" strokeWidth="2">
+              <path d="M18 6L6 18M6 6l12 12"/>
+            </svg>
+          </button>
+        </div>
+      )}
+
                   className="p-2 hover:bg-gray-100 rounded-lg transition"
                 >
                   <X className="w-6 h-6" />
@@ -1959,13 +2036,13 @@
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">Region</label>
-                        <input
-                          type="text"
-                          value={newSubmission.variantRegion}
-                          onChange={(e) => setNewSubmission({...newSubmission, variantRegion: e.target.value})}
-                          className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
-                          placeholder="NTSC (USA), PAL (UK), etc."
-                        />
+                            <select
+                              value={newSubmission.variantRegion}
+                              onChange={(e) => setNewSubmission({ ...newSubmission, variantRegion: e.target.value })}
+                              className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
+                            >
+                              {REGION_OPTIONS.map(opt => <option key={opt} value={opt}>{opt}</option>)}
+                            </select>
                       </div>
                     </div>
                     <div className="grid md:grid-cols-2 gap-4">
@@ -1973,21 +2050,27 @@
                         <label className="block text-sm font-medium text-gray-700 mb-2">Release Year</label>
                         <input
                           type="text"
+                          inputMode="numeric"
+                          pattern="\d{4}"
+                          maxLength={4}
                           value={newSubmission.variantRelease}
-                          onChange={(e) => setNewSubmission({...newSubmission, variantRelease: e.target.value})}
+                          onChange={(e) => {
+                            const val = e.target.value.replace(/[^0-9]/g, '').slice(0, 4);
+                            setNewSubmission({ ...newSubmission, variantRelease: val });
+                          }}
                           className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
                           placeholder="1999"
                         />
                       </div>
                       <div>
                         <label className="block text-sm font-medium text-gray-700 mb-2">Packaging</label>
-                        <input
-                          type="text"
+                        <select
                           value={newSubmission.variantPackaging}
-                          onChange={(e) => setNewSubmission({...newSubmission, variantPackaging: e.target.value})}
+                          onChange={(e) => setNewSubmission({ ...newSubmission, variantPackaging: e.target.value })}
                           className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-purple-500"
-                          placeholder="Clamshell, Slipcover, etc."
-                        />
+                        >
+                          {PACKAGING_OPTIONS.map(opt => <option key={opt} value={opt}>{opt}</option>)}
+                        </select>
                       </div>
                     </div>
                     <div>
@@ -2123,6 +2206,8 @@
   const [pendingSubmissions, setPendingSubmissions] = useState([]);
   const [marketplace, setMarketplace] = useState([]);
   const [userVotes, setUserVotes] = useState({});
+  const [lightboxOpen, setLightboxOpen] = useState(false);
+  const [previewImage, setPreviewImage] = useState(null);
   
   const [searchTerm, setSearchTerm] = useState('');
   const [selectedMaster, setSelectedMaster] = useState(null);
@@ -2431,12 +2516,22 @@
         .from('variants')
         .update({ approved: true })
         .eq('id', variantId);
-      
       if (error) throw error;
-      
+
+      // Optimistically remove from local pending list
+      setPendingSubmissions(prev => prev.filter(p => p.id !== variantId));
       alert('Submission approved!');
-      await loadPendingSubmissions();
+
+      // Refresh masters and the currently selected master so the variant appears immediately
       await loadMasterReleases();
+      if (selectedMaster) {
+        const { data, error: mErr } = await supabase
+          .from('master_releases')
+          .select('*, variants(*, variant_images(*))')
+          .eq('id', selectedMaster.id)
+          .single();
+        if (!mErr && data) setSelectedMaster(data);
+      }
     } catch (error) {
       alert('Error approving submission: ' + error.message);
     }
@@ -2528,6 +2623,7 @@
   };
 
   const handleSubmitEntry = async () => {
+    if (!validateSubmission()) return;
     try {
       if (submitType === 'master') {
         const { data: master, error: masterError } = await supabase
@@ -2551,7 +2647,7 @@
             master_id: master.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
@@ -2571,7 +2667,7 @@
             master_id: selectedMaster.id,
             format: newSubmission.variantFormat,
             region: newSubmission.variantRegion,
-            release_year: newSubmission.variantRelease,
+            release_year: newSubmission.variantRelease ? parseInt(newSubmission.variantRelease, 10) : null,
             packaging: newSubmission.variantPackaging,
             notes: newSubmission.variantNotes,
             barcode: newSubmission.variantBarcode,
